# ---
#   image: docker:latest

#   stages:
#     - build_test
#     - build_dev
#     - build_prod

#   build_test:
#     stage: build_test
#     services:
#     - name: docker:dind
#       entrypoint: ["env", "-u", "DOCKER_HOST"]
#       command: ["dockerd-entrypoint.sh"]
#     variables:
#       IMAGE_TAG:  $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
#       DOCKER_HOST: tcp://docker:2375/
#       DOCKER_DRIVER: overlay2
#       DOCKER_TLS_CERTDIR: ""
#     before_script:
#       - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     script:
#       - docker build -t jordo_com .
#       - docker tag jordo_com $CI_REGISTRY_IMAGE:test
#       - docker push $CI_REGISTRY_IMAGE:test

#   build_dev:
#     stage: build_dev
#     services:
#     - name: docker:dind
#       entrypoint: ["env", "-u", "DOCKER_HOST"]
#       command: ["dockerd-entrypoint.sh"]
#     variables:
#       IMAGE_TAG:  $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
#       DOCKER_HOST: tcp://docker:2375/
#       DOCKER_DRIVER: overlay2
#       DOCKER_TLS_CERTDIR: ""
#     before_script:
#       - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     script:
#       - docker build -t jordo_com .
#       - docker tag jordo_com $CI_REGISTRY_IMAGE:dev
#       - docker push $CI_REGISTRY_IMAGE:dev

#   build_prod:
#     when: manual
#     stage: build_prod
#     services:
#     - name: docker:dind
#       entrypoint: ["env", "-u", "DOCKER_HOST"]
#       command: ["dockerd-entrypoint.sh"]
#     variables:
#       DOCKER_HOST: tcp://docker:2375/
#       DOCKER_DRIVER: overlay2
#       DOCKER_TLS_CERTDIR: ""
#     script:
#       - docker build -t jordo_com .
#       - /bin/sh ./scripts/deploy.sh

image: node:latest

deploy_prod:
  stage: deploy
  environment: Production
  only:
    - master
  script:
    - npm install firebase tools
    - yarn install
    - yarn build
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_TOKEN
